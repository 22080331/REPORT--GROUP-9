INTRODUCTION

                                  import pandas as pd
                                  import numpy as np
                                  import matplotlib.pyplot as plt
                                  import pandas
                                  import statsmodels.api as sm
                                  import seaborn as sns
                                  # drive.mount('/content/drive')
                                  players = pd.read_csv('../input/nba-players-stats/player_data.csv')
                                  # Load the data
                                  file_path = '/content/player_data.csv'
                                  df_nba = pd.read_csv(file_path)

PLAYER SET CREATION

                                  players.columns
                                  years_s = players['year_start']
                                  years_e = players['year_end']
                                  height = players['height']
                                  weight = players['weight']
                                  college = players['college']

HEIGHT ISSUE

                                  print(players['height'].head(4))
                                  for i in range(len(players['height'])):
                                    if isinstance(players['height'][i], str):
                                      c = players['height'][i].split('-')
                                      players['height'][i] = 12 * float(c[0]) + float(c[1])
                               players['height'].head(4)

BASIC ANALYSIS
                                height_p = players.groupby(by = 'year_start')['height'].mean()                                                             
                                                                                             
                                # Function to convert height from feet-inches format (e.g., 6-10) to inches
                                def height_to_inches(height):
                                    if isinstance(height, str) and '-' in height:
                                        feet, inches = height.split('-')
                                        return int(feet) * 12 + int(inches)
                                    return None
                                
                                # Apply the height conversion to the dataset

                                df_nba['height_inches'] = df_nba['height'].apply(height_to_inches)
                                
                                # Convert height from inches to centimeters

                                df_nba['height_cm'] = df_nba['height_inches'] * 2.54
                                
                                # Plot a histogram of player heights in centimeters

                                plt.figure(figsize=(8,6))
                                filtered_data = df_nba['height_cm'].dropna()
                                plt.hist(filtered_data, bins=15, edgecolor='black')
                                plt.title('Distribution of Player Heights (in cm)')
                                plt.xlabel('Height (cm)')
                                plt.ylabel('Number of Players')
                                plt.show()

COMPARATIVE ANALYSIS

                                # Function to convert height from feet-inches format (e.g., 6-10) to inches
                                
                                def height_to_inches(height):
                                    if isinstance(height, str) and '-' in height:
                                        feet, inches = height.split('-')
                                        return int(feet) * 12 + int(inches)
                                    return None
                                
                                # Apply the height conversion to the dataset
                                
                                df_nba['height_inches'] = df_nba['height'].apply(height_to_inches)
                                
                                # Convert height from inches to centimeters
                                
                                df_nba['height_cm'] = df_nba['height_inches'] * 2.54
                                
                                # Filter player positions
                                
                                guards = df_nba[df_nba['position'] == 'G']
                                forwards = df_nba[df_nba['position'] == 'F']
                                centers = df_nba[df_nba['position'] == 'C']
                                
                                # Group by year and calculate mean height for each position group
                                
                                height_G = guards.groupby('year_start')['height_cm'].mean()
                                height_F = forwards.groupby('year_start')['height_cm'].mean()
                                height_C = centers.groupby('year_start')['height_cm'].mean()
                                
                                # Define major ticks for x and y axes
                                
                                major_ticks_y = np.arange(180, 240, 10)  # Adjusted for heights in centimeters
                                major_ticks_x = np.arange(1945, 2020, 10)
                                
                                # Plotting
                                
                                sns.set()
                                fig, ax = plt.subplots(figsize=(15, 10))
                                
                                # Plot heights for Guards, Forwards, and Centers
                                
                                height_G.plot(ax=ax, color='blue', label='Guards', marker='o')
                                height_F.plot(ax=ax, color='green', label='Forwards', marker='o')
                                height_C.plot(ax=ax, color='red', label='Centers', marker='o')
                                
                                # Set ticks and grid
                                
                                ax.set_xticks(major_ticks_x)
                                ax.set_yticks(major_ticks_y)
                                ax.grid(which='major')
                                
                                # Set axis labels and legend
                                
                                ax.set_xlabel('Year')
                                ax.set_ylabel('Height of Players (cm)')
                                ax.legend()
                                plt.title('Average Height by Position Over Time')
                                
                                # Display the plot
                                
                                plt.show()

LONGETIVITY

                                # Calculate career length

                                players['career_length'] = players['year_end'] - players['year_start']
                                plt.title('The average career length of NBA players')
                                older = players[np.logical_and(players['year_start'] >= 1970, players['year_start'] <= 1990)]
                                older['career_length'] = older['year_end'] - older['year_start']
                                older.head()
                                print('The average career length of players who entered the NBA between 1970 and 1990 is', np.round(older['career_length'].mean(),2), 'years')
                                print('The median career length of players who entered the NBA between 1970 and 1990 is', np.round(older['career_length'].median(),2), 'years')
                                modern = players[np.logical_and.reduce((players['year_start'] >= 1995, players['year_end'] <= 2018,players['year_start'] <= 2005))]
                                modern['career_length'] = modern['year_end'] - modern['year_start']
                                modern.head()
                                print('The average career length of players who entered the NBA between 1995 and 2005 is', np.round(modern['career_length'].mean(),2),'years')
                                print('The median career length of players who entered the NBA between 1995 and 2005 is', np.round(modern['career_length'].median(),2),'years')
                                retired = players[players['year_start'] <= 2005]
                                sns.set()
                                year_diff_mean = retired.groupby(by = 'year_start')['career_length'].mean()
                                year_diff_mean.plot(x = year_diff_mean.index, grid = 'on', xlabel = 'year', ylabel = 'avg career length', figsize = (8,6))

                                
